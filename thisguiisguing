-- This file was generated using Luraph Obfuscator v13.5.4

return(function(f4,l4,c4,a4,K4,W4,n4,i4,C4,q4,E4,V4,R4,F4,u4,Y4,I4,m4,h4,r4,N4,p4,o4,t4,U4,s4,v4,k4,P4,y4,O4,e4,S4,j4,b4,g4,T4,z4,B4,H4,A4,...)local I,L4,x,Q,R,J,P,F,A,d,W,c,B,M=v4.wrap,7,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);local X=select;local w=A4;while L4<=11 do if not(L4<=5)then if L4<=8 then if L4<=6 then P=2147483648;do L4=8;end;else if L4~=0X007 then do F=0X0001;end;do L4=5;end;else do x=O4;end;do L4=0X3;end;end;end;else if L4<=9 then do B=table.insert;end;L4=0;else if L4==0X0A then d=Y4;L4=1;else c=I4;L4=9;end;end;end;else if L4<=0X0002 then if not(L4<=0X00)then if L4==1 then W=P-0X01;L4=0XB;else do J=U4.byte;end;L4=0X6;end;else do M=string.char;end;L4=0x000C;end;elseif L4<=3 then Q=B4;do L4=0X4;end;else if L4==0x4 then R=0X2^y4;L4=2;else A=z4;L4=10;end;end;end;end;local U=rawget;L4=0X0;local Y,p,v=nil,nil,(nil);while 0.4002044278325395 do if not(L4<=1)then do if L4~=2 then do v=S4;end;break;else p=K4;do L4=0X00001;end;end;end;else if L4~=0 then do L4=3;end;else Y=p4;L4=0X2;end;end;end;local G=(type);local m=(c and c()or c4);local Z,V=nil,(nil);do for NC=0X0,0x2 do if not(NC<=0)then do if NC==1 then elseend;end;else do Z=string.sub;end;end;end;end;local u=nil;local e,i=nil,({[0X0]={[0]=0X0,0X001,0X02,0X3,4,0X5,0X6,7,m4,9,0X00A,0X0000B,0XC,13,14,F4},{[0]=0X1,0X000,0X3,2,5,4,7,0X6,0x00009,8,0X0000B,10,13,12,0XF,0xE},{[0]=V4,3,0x00000,0X0001,6,7,0X0004,0X00005,e4,11,8,9,14,0xF,12,13},{[0X000]=3,0X0002,1,u4,o4,0x06,5,4,0xb,e4,0x9,0X08,15,0XE,13,0Xc},{[0X0000]=0X4,0X5,0X6,0x7,0,0X0001,0x2,0X3,0XC,0X00D,14,0Xf,0X008,0X009,0XA,11},{[0]=0X5,0X4,7,P4,0X1,0,3,2,13,12,15,0Xe,9,m4,11,0XA},{[0X0]=6,0X7,N4,5,2,0X3,0X000,0X1,14,0X0F,R4,13,0Xa,11,0x8,9},{[0X0]=o4,0X6,5,0x0004,3,0x2,0X1,0X0,0XF,0XE,0XD,0xC,11,0X00a,0X9,0X008},{[0]=8,0X9,0X00A,0xb,0xC,k4,14,F4,0X00,0x1,0x2,0X3,4,0X05,0X6,o4},{[0X0]=0x9,8,0xB,10,13,0Xc,15,14,0X00001,0,0X3,V4,5,4,0X7,6},{[0X0]=10,11,0x8,9,14,0Xf,0XC,k4,2,3,0X0,0X1,0X6,0x07,4,0x5},{[0X00]=0X0000b,e4,0x0009,0X008,0XF,0Xe,0XD,0xc,3,V4,1,0X00,0x7,0x0006,0X00005,0X0004},{[0X0]=12,13,0X0e,15,m4,0X9,10,0X0B,4,0X5,6,0X0007,0,1,2,3},{[0]=13,12,15,0XE,0x9,m4,11,10,0X00005,0x4,0X7,6,0X0001,0,3,2},{[0]=0XE,0X00F,0Xc,0XD,0X00a,11,0X0008,0X00009,6,0X00007,4,5,0X2,W4,u4,0X1},{[0X00000]=15,14,0Xd,0X000c,n4,0Xa,0X9,0x8,0X7,0X00006,0X0005,0X00004,3,2,0X1,0x0}});for ly=0X0000,0X1 do do if ly~=0X0 then do u=function()local Hu=(J(V,F,F));F=F+1;return Hu;end;end;else V=v(Z(V,0X5),q4,function(dP)if J(dP,0X2)==0X48 then local oC=0X00000;while-1547410681 do do if oC==0X0 then e=Q(Z(dP,0X0001,1));oC=0x001;else return"";end;end;end;else local YF=M(Q(dP,0X10));if not(e)then return YF;else local jB=A(YF,e);local RB=0x1;while"|P\087\047t^"do do if RB~=0X00000 then e=nil;RB=0X0;else return jB;end;end;end;end;end;end);end;end;end;local N,y=4294967296,(setmetatable);local S=setfenv;do L4=3;end;local k,o,q,K=nil,nil,nil,nil;while L4<=0X4 do do if not(L4<=1)then if not(L4<=0X00002)then do if L4~=0x00003 then q={[0]=1};L4=1;else k=N-1;do L4=2;end;end;end;else o=function()local pQ=(0X00000);local YQ,oQ,yQ,gQ=nil,nil,nil,nil;do while true do if pQ<=0 then do YQ,oQ,yQ,gQ=J(V,F,F+3);end;pQ=0X02;else do if pQ==1 then return gQ*0X1000000+yQ*65536+oQ*0X0000100+YQ;else F=F+4;pQ=1;end;end;end;end;end;end;L4=4;end;else do if L4~=0 then K=b4 or table.unpack;L4=0;else do local wJ,VJ=0X1,nil;while wJ~=0X00002 do do if wJ==0 then for ZZ=1,31 do local cZ=(0x0);do while'\085\100'do if cZ==0 then q[ZZ]=VJ;cZ=0X1;else VJ=VJ*0X00002;break;end;end;end;end;wJ=2;else do VJ=2;end;wJ=0;end;end;end;end;L4=0X0005;end;end;end;end;end;local s=function()local ZM,WM=o(),o();if WM>=P then WM=WM-N;end;return WM*N+ZM;end;local b=function(it,et,zt)local pt=nil;for Gs=0,0x2 do if Gs<=0X0 then do pt=(it/q[et])%q[zt];end;else do if Gs~=0X1 then return pt;else pt=pt-pt%0X001;end;end;end;end;end;local j=(function()local ap=(o());local Mp,Wp,np,Pp,Bp,qp=2,nil,nil,nil,nil,(nil);do while"\042\093\035"do if not(Mp<=3)then do if Mp<=0X5 then if Mp==4 then qp=1;do Mp=0X3;end;else do Bp=b(Wp,0,20)*N+ap;end;Mp=0X4;end;else if Mp==6 then np=(-0X1)^b(Wp,31,1);Mp=0X00;else return np*(2^(Pp-0X03ff))*(Bp/R+qp);end;end;end;else if not(Mp<=0X001)then do if Mp~=0x2 then if Pp==0X0 then if Bp~=0 then local jh=(1);do while jh~=0X2 do if jh~=0x00000 then Pp=0X1;jh=0;else do qp=0x0000;end;jh=2;end;end;end;else return np*0X0000;end;elseif Pp==s4 then if Bp==0X0 then return np*(0/0X0);else return np*(1/u4);end;end;do Mp=7;end;else Wp=o();Mp=0x01;end;end;else if Mp~=0 then if not(ap==0x0 and Wp==u4)then else return 0x0000;end;Mp=0x6;else Pp=b(Wp,0X00014,0X000b);Mp=5;end;end;end;end;end;end);local l,H,t=nil,nil,nil;do for vM=0,2 do if not(vM<=0)then if vM~=0x1 then t=l and l.band or function(GS,KS)do for F2=0,0X01 do if F2==0 then GS=GS%N;else KS=KS%N;end;end;end;return((GS+KS)-H(GS,KS))/2;end;else H=l and l.bxor or function(xS,BS)do xS=xS%N;end;local tS=(1);local jS=0X00003;local KS=(nil);do repeat if not(jS<=0x1)then do if jS~=2 then do BS=BS%N;end;do jS=0x01;end;else return KS+xS*tS+BS*tS;end;end;else do if jS==0 then while xS>0X0 and BS>0 do local rB,zB=nil,(nil);for yU=0,1 do if yU==0X0 then rB=xS%0X00010;else zB=BS%0X10;end;end;local kB=(0);repeat if kB==0X0 then KS=KS+i[rB][zB]*tS;kB=0X001;else xS=(xS-rB)/0X0010;do kB=0x002;end;end;until kB>0X1;do kB=0;end;while kB~=2 do if kB==0 then BS=(BS-zB)/0X00010;kB=0X01;else tS=tS*16;do kB=2;end;end;end;end;jS=0X2;else do KS=u4;end;do jS=0;end;end;end;end;until false;end;end;end;else do l=(j4 or i4);end;end;end;end;local a=(l and l.bor or function(pv,jv)local Tv=0;while 464183222 do if not(Tv<=0X0)then if Tv==1 then return k-t(k-pv,k-jv);else jv=jv%N;Tv=0X1;end;else pv=pv%N;Tv=0x2;end;end;end);local E,r=l and l[l4]or function(od)return k-(od%N);end,l and l.lshift;local C=(l and l[H4]);L4=4;local g,h,T=nil,nil,nil;repeat if not(L4<=1)then do if L4<=0x2 then do h={[3]=P4,[6]=0X6,[3]=0X1,[6]=3,[2]=0X4,[0X004]=0x1,[0x2]=0,[0X3]=7,[0X0002]=u4,[0X1]=0X6,[0X7]=3,[5]=6};end;L4=0X00;else if L4~=0X0003 then r=r or function(zr,Pr)local Lr=0;repeat if Lr<=0 then if not(Pr>=0x0020)then else return 0x000;end;Lr=0x2;else if Lr~=0X1 then do if not(Pr<0)then else return C(zr,-Pr);end;end;do Lr=0X1;end;else return(zr*q[Pr])%N;end;end;until false;end;L4=3;else C=C or function(Uc,Ec)if not(Ec>=t4)then else return u4;end;if Ec<0 then do return r(Uc,-Ec);end;end;local cc=(Uc%N/q[Ec]);return cc-cc%1;end;do L4=0X1;end;end;end;end;else do if L4~=0 then do g=function()local bO=(0x0);local KO=(0X0);repeat local QG=J(V,F,F);F=F+0X0001;bO=a(bO,r(t(QG,0x7F),KO));do if t(QG,0x00080)~=0X0 then else return bO;end;end;KO=KO+7;until false;end;end;L4=2;else do T=function()local yq=g();local Rq=0X00000;do while'|'do if Rq==0 then if yq>W then return yq-N;end;Rq=1;else do return yq;end;end;end;end;end;end;break;end;end;end;until false;local L=u();local d4=({});local D4=u();L4=0X0001;local X4,G4=nil,(nil);while true do do if L4~=0X0 then X4=function(tB)local dB,BB,gB,UB,iB,cB=7,nil,nil,nil,nil,nil;while'\122Q!\116\119N\056\099'do if dB<=3 then if not(dB<=0X1)then if dB~=0x00002 then UB=H(BB[0x02],D4);do dB=1;end;else do D4=(0Xd1*D4+tB)%0X100;end;dB=4;end;else do if dB==0 then cB=H(BB[4],D4);dB=0X2;else do iB=H(BB[0X3],D4);end;do dB=0X0;end;end;end;end;else if dB<=0x5 then if dB==0X4 then F=F+0X4;do dB=0X0005;end;else return cB*0X001000000+iB*a4+UB*0X0000100+gB;end;else if dB==6 then gB=H(BB[1],D4);dB=3;else do BB={J(V,F,F+3)};end;dB=6;end;end;end;end;end;L4=0;else do G4={};end;break;end;end;end;L4=0x06;local w4,Q4,O,D,f,x4,z=nil,nil,nil,nil,nil,nil,(nil);repeat if L4<=2 then do if not(L4<=0X0)then if L4~=1 then x4=0x01;L4=0X0;else do O=C4;end;L4=5;end;else z=h4;do L4=7;end;end;end;else if L4<=0X00004 then do if L4~=3 then Q4=function(Mp)local xp,sp,Zp=4,nil,nil;while 0.8428680145878122 do if xp<=0X0001 then if xp==0X0 then do for SS=1,sp,0x1F3d do local GS=3;local QS,iS=nil,(nil);repeat if not(GS<=0X1)then do if GS~=2 then QS=SS+0X1F3D-0X1;do GS=0X2;end;else if QS>sp then QS=sp;end;GS=0X00000;end;end;else do if GS~=0X0000 then for Ds=0X1,#iS do iS[Ds]=H(iS[Ds],L);L=(Mp*L+173)%r4;end;break;else iS={J(V,F+SS-1,F+QS-E4)};do GS=0X0001;end;end;end;end;until false;Zp=Zp..M(K(iS));end;end;xp=1;else F=F+sp;do xp=3;end;end;else do if xp<=0X2 then Zp="";xp=0X0;else if xp==0X00003 then return Zp;else sp=o();do xp=2;end;end;end;end;end;end;end;do L4=1;end;else do f={5,0X00007,0X4};end;L4=0X0002;end;end;else if L4~=0X5 then w4=function(...)do return X('#',...),{...};end;end;L4=0X4;else D=f4;L4=3;end;end;end;until L4>0X006;local Z4=nil;for DM=0X0,1 do if DM~=0x000 then function Z4(qr,Ur,pr)local Jr,rr=Ur[8],Ur[2];local jr,Nr,Cr,ar=Ur[7],Ur[6],Ur[5],Ur[4];local Pr=Ur[0X0003];local Xr=y({},{__mode='v'});local gr,Dr=Ur[0X00009],(nil);Dr=function(...)local Jn=0x01;local tn=(c and c()or _ENV);local Fn=({});local Rn,wn=w4(...);local pn=((tn==m and qr or tn));local An=(0);Rn=Rn-0X1;for U9=0,Rn do do if Pr>U9 then do(Fn)[U9]=wn[U9+0X00001];end;else do break;end;end;end;end;(d4)[0x1]=Ur;do d4[0X2]=Fn;end;do if not Cr then wn=nil;else if ar then(Fn)[Pr]={n=Rn>=Pr and Rn-Pr+1 or 0,K(wn,Pr+1,Rn+0X1)};end;end;end;do if pn~=tn then if not(S)then _ENV=pn;else S(Dr,pn);end;end;end;local On,En,Pn,Vn=w(function()while"\0717"do local JC=Jr[Jn];local qC=JC[0X2];do Jn=Jn+1;end;if qC<44 then if qC<22 then if not(qC<11)then if qC>=0x10 then if qC>=0x013 then if not(qC<0x014)then if qC==0X15 then do if Fn[JC[4]]==Fn[JC[7]]then else Jn=JC[0X5];end;end;else Fn[JC[0X5]]=Fn[JC[4]]+Fn[JC[0x7]];end;else Fn[JC[5]]=d4[JC[4]];end;else if qC<0X11 then repeat local GU,nU=Xr,(Fn);if not(#GU>0)then else local Tk={};for UI,GI in Y,GU do for EM,bM in Y,GI do if bM[1]==nU and bM[0X2]>=0X0 then local i1=(bM[0X002]);do if not Tk[i1]then Tk[i1]={nU[i1]};end;end;bM[1]=Tk[i1];do bM[2]=0X001;end;end;end;end;end;until true;return false,JC[0x5],An;else if qC==18 then do(Fn[JC[5]])[JC[0X1]]=Fn[JC[0X7]];end;else Fn[JC[5]]=C(Fn[JC[0X004]],Fn[JC[7]]);end;end;end;else do if not(qC<0X0d)then if qC<14 then local dj=(JC[5]);(Fn[dj])(K(Fn,dj+0X0001,An));do An=dj-0X1;end;else do if qC~=15 then local Pq=JC[4];Fn[JC[0x5]]=Fn[Pq]..Fn[Pq+1];else Fn[JC[0X05]]=Fn[JC[0X0004]];end;end;end;else if qC~=12 then if not(not Fn[JC[5]])then else Jn=JC[0X0004];end;else Fn[JC[5]]={K({},1,JC[0x4])};end;end;end;end;else if not(qC>=5)then do if qC<0X2 then do if qC==1 then do if not(not(Fn[JC[4]]<=JC[3]))then else Jn=JC[0x5];end;end;else local I2=JC[0X5];local b2,E2=Fn[I2],(JC[7]-1)*50;for cq=0x1,An-I2 do b2[E2+cq]=Fn[I2+cq];end;end;end;else if not(qC<0X003)then if qC~=0X4 then pn[JC[0X1]]=Fn[JC[5]];else repeat local s9,k9=Xr,Fn;do if#s9>0X0 then local Rs=({});for Cm,Hm in Y,s9 do for vV,nV in Y,Hm do do if nV[1]==k9 and nV[2]>=0 then local Nt=nV[2];if not(not Rs[Nt])then else Rs[Nt]={k9[Nt]};end;do nV[0X1]=Rs[Nt];end;nV[0x02]=0X001;end;end;end;end;end;end;until true;local Ww=(JC[0X5]);return false,Ww,Ww+JC[4]-0x2;end;else(Fn)[JC[0X5]]=r(Fn[JC[0x04]],Fn[JC[7]]);end;end;end;else if qC>=0X8 then if not(qC<0X009)then if qC~=0X0000a then local pk=(JC[0X5]);local Bk=(JC[4]);An=pk+Bk-0X1;do repeat local AJ,WJ=Xr,Fn;if#AJ>0 then local zV=({});do for D_,U_ in Y,AJ do do for NH,wH in Y,U_ do if wH[1]==WJ and wH[0X2]>=0x0 then local HR=wH[0X02];do if not zV[HR]then(zV)[HR]={WJ[HR]};end;end;do wH[0X1]=zV[HR];end;wH[0x0002]=1;end;end;end;end;end;end;until true;end;return true,pk,Bk;else do Fn[JC[5]]=Fn[JC[0X0004]]*Fn[JC[7]];end;end;else local w_,y_=Rn-Pr,JC[0x5];do if not(w_<0X0)then else w_=-1;end;end;for ZR=y_,y_+w_ do Fn[ZR]=wn[Pr+(ZR-y_)+1];end;An=y_+w_;end;else if not(qC<0X0006)then if qC~=7 then Fn[JC[5]]=Fn[JC[0X004]][Fn[JC[0X007]]];else if JC[0X7]==78 then Jn=Jn-1;(Jr)[Jn]={[5]=(JC[0X5]-0X19),[0X2]=36,[4]=(JC[0X00004]-25)};else do Fn[JC[0X0005]]=nil;end;end;end;else local RK=(JC[0x5]);(Fn[RK])(Fn[RK+0x0001],Fn[RK+0x02]);An=RK-1;end;end;end;end;else if not(qC<33)then do if not(qC<38)then do if not(qC<0x29)then do if qC>=0X02A then if qC~=0x2b then do Fn[JC[0X5]][Fn[JC[0X4]]]=Fn[JC[7]];end;else local jy=(pr[JC[0X00004]]);(jy[1])[jy[0X2]]=Fn[JC[0X05]];end;else(Fn)[JC[5]]=a(Fn[JC[0x4]],Fn[JC[0X7]]);end;end;else if not(qC<39)then if qC==0X28 then if Fn[JC[4]]<Fn[JC[7]]then Jn=JC[0X005];end;else do An=JC[5];end;(Fn[An])();An=An-0x01;end;else local Gn=(JC[5]);(Fn)[Gn]=Fn[Gn](Fn[Gn+1]);An=Gn;end;end;end;else if qC<35 then do if qC==0X00022 then local LS=(nil);local WS=rr[JC[4]];local RS=WS[1];local BS=(#RS);do if not(BS>0x00)then else LS={};do for Xy=1,BS do local Wy=RS[Xy];if Wy[0X00001]==0 then(LS)[Xy-0X0001]={Fn,Wy[0X00002]};else LS[Xy-0X1]=pr[Wy[0X2]];end;end;end;B(Xr,LS);end;end;(Fn)[JC[0X5]]=Z4(pn,WS,LS);else local Tg=JC[0x5];local dg,hg=Fn[Tg]();if dg then Fn[Tg+1]=hg;Jn=JC[0x004];end;end;end;else if qC<0X24 then local uL=JC[0X004];local pL=Fn[uL];for Hr=uL+0X1,JC[7]do do pL=pL..Fn[Hr];end;end;do(Fn)[JC[0X005]]=pL;end;else if qC==37 then repeat local sg,Mg,Ig=Xr,Fn,JC[5];if not(#sg>0X0)then else local uP={};for yX,TX in Y,sg do do for Td,Xd in Y,TX do do if Xd[0X1]==Mg and Xd[0X2]>=Ig then local wQ=Xd[2];if not uP[wQ]then(uP)[wQ]={Mg[wQ]};end;(Xd)[0x0001]=uP[wQ];Xd[0X02]=0X1;end;end;end;end;end;end;until true;else do if JC[7]==213 then do Jn=Jn-0X1;end;Jr[Jn]={[5]=(JC[0X0005]-106),[0X2]=15,[0X4]=(JC[4]-106)};elseif JC[7]==73 then do Jn=Jn-0x1;end;Jr[Jn]={[0X05]=(JC[5]-55),[0x2]=0X001a,[4]=(JC[4]-55)};elseif JC[0X7]==128 then Jn=Jn-0X01;(Jr)[Jn]={[0X005]=(JC[0X0005]-0Xc8),[0X4]=(JC[0x04]-0X0000c8),[0X02]=49};else repeat local DR,AR=Xr,Fn;if#DR>0X0 then local RZ=({});for gW,kW in Y,DR do for OX,VX in Y,kW do if VX[0X1]==AR and VX[2]>=0X0000 then local bG=(VX[0X2]);if not(not RZ[bG])then else(RZ)[bG]={AR[bG]};end;(VX)[1]=RZ[bG];VX[2]=0x001;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end;else if qC>=27 then do if not(qC<0X00001e)then if not(qC<31)then if qC==32 then local Ib=(JC[0X7]);local bb=(JC[5]);local pb=(JC[4]);do if pb~=0X0 then An=bb+pb-0X1;end;end;local xb,Ob=nil,nil;if pb~=1 then xb,Ob=w4(Fn[bb](K(Fn,bb+1,An)));else xb,Ob=w4(Fn[bb]());end;if Ib==1 then An=bb-0X001;else if Ib==0 then do xb=xb+bb-1;end;An=xb;else do xb=bb+Ib-0X2;end;An=xb+0x01;end;local Zn=0X0000;for lg=bb,xb do Zn=Zn+1;Fn[lg]=Ob[Zn];end;end;else d4[JC[4]]=Fn[JC[5]];end;else local BJ=pr[JC[0X04]];(Fn)[JC[0X5]]=BJ[1][BJ[2]];end;else if not(qC>=28)then if Fn[JC[0x004]]~=JC[3]then else Jn=JC[5];end;else if qC==29 then Fn[JC[5]]=not Fn[JC[4]];else Jn=JC[4];end;end;end;end;else do if qC<24 then if qC~=23 then Fn[JC[0X5]]=H(Fn[JC[4]],Fn[JC[0X00007]]);else if not(not(Fn[JC[4]]<=Fn[JC[7]]))then else do Jn=JC[0X00005];end;end;end;else if qC>=25 then if qC==0x1A then repeat local B9,d9=Xr,(Fn);if#B9>0X0 then local wD={};do for py,Vy in Y,B9 do for xV,IV in Y,Vy do if not(IV[1]==d9 and IV[0x2]>=0X0)then else local n2=IV[2];if not wD[n2]then wD[n2]={d9[n2]};end;IV[0X0001]=wD[n2];do(IV)[2]=0x1;end;end;end;end;end;end;until true;local OV=(JC[0x5]);do return false,OV,OV;end;else do(Fn)[JC[5]]=true;end;end;else Fn[JC[5]]=Fn[JC[4]]>Fn[JC[0X7]];end;end;end;end;end;end;elseif not(qC>=66)then if qC<0X00037 then if qC<49 then do if qC<0X002E then if qC==45 then local dK=JC[5];local BK=(I(function(...)p();for U7 in...do p(true,U7);end;end));BK(Fn[dK],Fn[dK+1],Fn[dK+2]);An=dK;Fn[dK]=BK;Jn=JC[0x4];else(Fn)[JC[5]]=Fn[JC[0X0004]][JC[0X03]];end;else if qC<0x002f then local Sp=(JC[0X005]);local fp,ep=Fn[Sp]();if not(fp)then else Jn=JC[0X4];do Fn[Sp+3]=ep;end;end;else if qC==0x0030 then Fn[JC[5]]=JC[1];else(Fn[JC[5]])[JC[1]]=JC[3];end;end;end;end;else if qC>=52 then if not(qC<53)then do if qC~=0x36 then Fn[JC[5]]=Fn[JC[4]]%JC[0X003];else(Fn)[JC[5]]=-Fn[JC[4]];end;end;else local Gq=JC[0x5];Fn[Gq]=Fn[Gq](Fn[Gq+1],Fn[Gq+0x2]);do An=Gq;end;end;else if not(qC>=50)then do Fn[JC[0X005]]=#Fn[JC[4]];end;else do if qC~=0X33 then do if Fn[JC[0X4]]==Fn[JC[7]]then Jn=JC[5];end;end;else do(Fn)[JC[5]]=Fn[JC[4]]%Fn[JC[7]];end;end;end;end;end;end;else if not(qC<60)then if not(qC>=63)then if qC<61 then if Fn[JC[4]]==JC[3]then else Jn=JC[0X05];end;else if qC~=62 then local Ep=(JC[5]);An=Ep+JC[4]-0X1;Fn[Ep](K(Fn,Ep+0X01,An));An=Ep-1;else(Fn)[JC[5]]={};end;end;else if qC<64 then local IW=JC[5];local HW=Fn[IW+1];local MW=Fn[IW];local kW=Fn[IW+2];(Fn)[IW]=I(function()for KG=MW,HW,kW do p(true,KG);end;end);Jn=JC[0x0004];else if qC==0X00041 then local YO=JC[5];do Fn[YO]=Fn[YO](K(Fn,YO+0x1,An));end;An=YO;else(Fn)[JC[5]]=Fn[JC[0X4]]~=Fn[JC[7]];end;end;end;else do if not(qC<0X000039)then if qC<58 then(Fn)[JC[5]]=Fn[JC[4]]^Fn[JC[7]];else if qC==0X03b then Fn[JC[0X05]][Fn[JC[4]]]=JC[0x003];else if not(Fn[JC[0X4]]<Fn[JC[0X07]])then Jn=JC[0X5];end;end;end;else if qC==56 then(Fn)[JC[0X05]]=false;else local Ue=JC[5];local Ze,ne=Fn[Ue],((JC[7]-0X1)*50);for O6=0X00001,JC[0X4]do(Ze)[ne+O6]=Fn[Ue+O6];end;end;end;end;end;end;else do if qC>=0X4d then if not(qC<83)then do if not(qC<86)then if qC<87 then local L7=JC[5];(Fn[L7])(Fn[L7+0X1]);An=L7-1;else if qC~=88 then if JC[7]~=0XD3 then do if Fn[JC[0X00005]]then Jn=JC[4];end;end;else Jn=Jn-1;do Jr[Jn]={[5]=(JC[5]-59),[4]=(JC[0X4]-59),[2]=0x00007};end;end;else Fn[JC[5]]=Fn[JC[4]]/Fn[JC[7]];end;end;else if qC>=0X54 then if qC~=85 then local Ww=JC[5];An=Ww+JC[4]-1;(Fn)[Ww]=Fn[Ww](K(Fn,Ww+1,An));An=Ww;else do Fn[JC[5]]=Fn[JC[0X004]]<=Fn[JC[0X7]];end;end;else(Fn)[JC[0X0005]]=t(Fn[JC[4]],Fn[JC[0X7]]);end;end;end;else if not(qC<0X000050)then if not(qC<81)then if qC==0X52 then local xe=(Fn[JC[4]]/Fn[JC[0x7]]);Fn[JC[5]]=xe-xe%1;else local fq=(JC[0X5]);local Nq=I(function(...)p();do for r6,I6 in...do p(true,r6,I6);end;end;end);(Nq)(Fn[fq],Fn[fq+0X1],Fn[fq+2]);An=fq;(Fn)[fq]=Nq;Jn=JC[4];end;else local iC=(JC[0x05]);local QC,KC,hC=Fn[iC]();if not(QC)then else Fn[iC+0x0001]=KC;(Fn)[iC+0X00002]=hC;Jn=JC[0X0004];end;end;else if qC>=78 then do if qC==79 then(Fn)[JC[5]]=Fn[JC[4]]-Fn[JC[7]];else do Fn[JC[5]]=Fn[JC[0X04]]<Fn[JC[7]];end;end;end;else(Fn)[JC[5]]=E(Fn[JC[4]]);end;end;end;else do if qC<71 then if qC<0X44 then do if qC==0X43 then for xw=JC[0X5],JC[4]do Fn[xw]=nil;end;else(Fn)[JC[0x5]]=JC[1];end;end;else if not(qC<0x0045)then if qC~=0X00046 then local Lm=(JC[5]);local sm=(Fn[JC[4]]);(Fn)[Lm+1]=sm;do(Fn)[Lm]=sm[JC[3]];end;else(Fn)[JC[5]]=Fn[JC[4]]==Fn[JC[0X7]];end;else Fn[JC[0X5]]=Fn[JC[4]]>=Fn[JC[7]];end;end;else if qC<0x04A then do if not(qC<0X48)then if qC~=0X049 then Fn[JC[5]]=pn[JC[1]];else repeat local cQ,KQ=Xr,Fn;if#cQ>0 then local vG={};for wH,lH in Y,cQ do for bL,DL in Y,lH do if not(DL[0X001]==KQ and DL[0X2]>=0)then else local J6=DL[0x002];if not(not vG[J6])then else(vG)[J6]={KQ[J6]};end;DL[1]=vG[J6];do(DL)[0X2]=1;end;end;end;end;end;until true;return true,JC[0X005],0X0;end;else(Fn)[JC[5]]=Fn[JC[4]]~=JC[0X003];end;end;else if qC<75 then repeat local CW,JW=Xr,Fn;if#CW>0X00000 then local ph={};for KM,hM in Y,CW do do for yQ,vQ in Y,hM do if vQ[1]==JW and vQ[2]>=0X0 then local b_=(vQ[2]);do if not(not ph[b_])then else do(ph)[b_]={JW[b_]};end;end;end;vQ[1]=ph[b_];do vQ[0x2]=0X01;end;end;end;end;end;end;until true;return true,JC[5],1;else if qC==76 then local qO=JC[0X05];local vO=I(function(...)(p)();for ZV,OV,mV,rV,yV,RV,cV,IV,VV,GV in...do(p)(true,{ZV,OV,mV,rV,yV,RV,cV,IV,VV,GV});end;end);vO(Fn[qO],Fn[qO+1],Fn[qO+0X0002]);do An=qO;end;Fn[qO]=vO;do Jn=JC[0x4];end;else if not(Fn[JC[0X4]]<=Fn[JC[0X7]])then else Jn=JC[0X00005];end;end;end;end;end;end;end;end;end;end;end);if not(On)then if G(En)~="s\116rin\103"then(d)(En,0X0);else if O(En,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if O(En,"^.-:%d+: ")then d('L\117ra\112\104 \083\099r\105pt:'..(Nr[Jn-1]or"(internal)").."\058\032"..x(En),0X0);else(d)(En,0x0);end;end;elseif En then if Vn==0X1 then return Fn[Pn]();else do return Fn[Pn](K(Fn,Pn+0X001,An));end;end;else if not(Pn)then else return K(Fn,Pn,Vn);end;end;end;do if not(S)then else(S)(Dr,qr);end;end;return Dr;end;else end;end;local function J4()local NP,SP=0X0000,nil;repeat if NP==0 then NP=0x1;else SP={g4,{},g4,nil,nil,{},nil,{},g4};break;end;until(false);local vP=({});local iP={};do(SP)[13]=o();end;local pP=(1);NP=0x0;local wP,qP=nil,nil;repeat if NP<=0 then wP={};NP=2;else if NP~=1 then SP[7]=g();NP=0x001;else qP=u();break;end;end;until(false);SP[5]=b(qP,0X0001,0x1)~=0;NP=6;local cP,QP,AP,uP=nil,nil,nil,(nil);while NP<11 do if NP<=4 then if not(NP<=1)then do if NP<=2 then uP=u()~=0X0;NP=3;elseif NP~=0X3 then AP=u();do NP=2;end;else for IE=1,QP do local gE,UE,AE=nil,nil,(nil);local DE=(0X0001);while DE~=0x8 do if DE<=0X0003 then if not(DE<=1)then do if DE~=2 then AE={gE,{}};DE=0X006;else if not(uP)then else local Uw=0X1;repeat do if Uw==0X0000 then x4=x4+1;Uw=0X00002;else G4[x4]=AE;Uw=0X00;end;end;until Uw>=2;end;DE=0X08;end;end;else if DE~=0X0 then gE=nil;do DE=0X7;end;else if UE==51 then gE=j()+o();elseif UE==0Xd0 then gE=o();elseif UE==159 then do gE=true;end;elseif UE==116 then gE=Z(Q4(AP),0X4);elseif UE==0X000024 then gE=s();elseif UE==67 then gE=s();elseif UE==0X0029 then gE=j();elseif UE==0x000072 then gE=false;elseif UE~=0X8d then else gE=s();end;DE=3;end;end;else do if DE<=0X5 then if DE~=4 then pP=pP+1;DE=2;else vP[IE-1]=pP;DE=0;end;else do if DE==0x006 then(iP)[pP]=AE;DE=0x5;else UE=u();do DE=4;end;end;end;end;end;end;end;end;do NP=0X9;end;end;end;else do if NP==0 then for UW=E4,cP do local cW=o();local gW,aW,IW=2,nil,(nil);repeat if not(gW<=0x00)then if gW==0x1 then do for oi=cW,aW do SP[6][oi]=IW;end;end;break;else aW=o();do gW=0X0;end;end;else IW=o();do gW=1;end;end;until false;end;NP=0X0008;else SP[0x1]=wP;do NP=0X5;end;end;end;end;else do if NP<=0X7 then if not(NP<=0X5)then if NP==6 then(SP)[4]=b(qP,2,1)~=0;NP=1;else cP=o();NP=0;end;else for po=0X001,g()do(wP)[po]={u(),g()};end;do NP=10;end;end;else do if not(NP<=8)then do if NP~=9 then(SP)[0X0003]=g();NP=0X7;else SP[11]=u();NP=11;end;end;else QP=o()-0X6cDF;NP=0x4;end;end;end;end;end;end;local PP=o()-T4;local zP=SP[2];do NP=5;end;local KP=nil;repeat if not(NP<=2)then if NP<=0X3 then SP[12]=u();NP=4;else do if NP==0X00004 then KP=o()-80960;NP=6;else for nU=0X0,PP-E4 do zP[nU]=J4();end;do NP=1;end;end;end;end;else do if not(NP<=0x0)then if NP==0X0001 then(SP)[15]=u();NP=0;else SP[14]=o();NP=3;end;else SP[0X00009]=g();do NP=2;end;end;end;end;until NP>5;local JP=(SP[8]);do for uq=1,KP do do(JP)[uq]={[6]=u(),[0X00007]=T(),[2]=g(),[5]=T(),[1]=u(),[0X4]=T(),[W4]=u()};end;end;end;NP=1;repeat if NP~=0 then for bm=1,KP do local jm=(0X00001);local Um=nil;while jm<0x2 do if jm==0X0 then for W6,a6 in ipairs(f)do local P6,b6=nil,nil;for fI=0,1 do do if fI==0X000 then P6=h[a6];else b6=Um[P6];end;end;end;if b6==0X1 then local HZ,kZ,fZ=0,nil,(nil);while HZ~=3 do do if not(HZ<=0)then if HZ==0X00001 then do fZ=iP[kZ];end;HZ=2;else do if not(fZ)then else local DS=nil;do for zr=0X0,2 do if zr<=0X0000 then Um[P6]=fZ[1];else if zr==1 then DS=fZ[2];else do DS[#DS+0X1]={Um,P6};end;end;end;end;end;end;end;do HZ=0x3;end;end;else kZ=vP[Um[a6]];do HZ=0X1;end;end;end;end;else if b6~=0X0C then else(Um)[a6]=bm+Um[a6]+0X00001;end;end;end;jm=2;else do Um=SP[8][bm];end;jm=0X0;end;end;end;NP=0X000;else return SP;end;until false;end;L4=2;local M4=(nil);repeat if not(L4<=0)then do if L4~=0x1 then do M4=J4();end;L4=0x1;else(d4)[0x004]=G4;L4=0;end;end;else G4=nil;do L4=0X3;end;end;until L4>=0X3;return Z4(m,M4,g4)(...);end)(assert,'\098\110\111t',_ENV,0x10000,coroutine.yield,3,0Xb,bit32,string.match,'.\046',0X1,0x02,0XC,0x000f,0,error,getfenv,0X00008,rawset,256,0x4,next,0X07,0X00020,string,2047,coroutine,0xD,0x0006,0x34,tostring,0Xa,string.gsub,bit,unpack,nil,59339,string.rep,tonumber,'\114\115hift',pcall,...);
